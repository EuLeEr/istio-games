apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus
    component: server
  name: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      component: server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
        component: server
    spec:
      containers:
      - args:
        - --volume-dir=/etc/config
        - --webhook-url=http://127.0.0.1:9090/-/reload
        image: jimmidyson/configmap-reload:v0.2.2
        imagePullPolicy: IfNotPresent
        name: prometheus-server-configmap-reload
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
      - args:
        - --config.file=/etc/config/prometheus.yml
        image: prom/prometheus:v2.4.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: prometheus-server
        ports:
        - containerPort: 9090
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server
        name: config-volume
---
apiVersion: v1
data:
  prometheus.yml: |-
    # my global config
    global:
      scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
    # scrape_timeout is set to the global default (10s).

    scrape_configs:

    # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    - job_name: 'prometheus'
      static_configs:
        - targets: ['localhost:9090']

    - job_name: 'aleph'
      metrics_path: '/'
      # scheme defaults to 'http'.
      scrape_interval: 15s
      static_configs:
        - targets: ['aleph.games.svc.cluster.local:8000']
    - job_name: 'beth'
      metrics_path: '/'
      # scheme defaults to 'http'.
      scrape_interval: 15s
      static_configs:
        - targets: ['beth.games.svc.cluster.local:8000']
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-server
  selfLink: /api/v1/namespaces/default/configmaps/promconf
